{"ast":null,"code":"var _jsxFileName = \"D:\\\\InternShip\\\\17-07-2024\\\\main\\\\src\\\\Components\\\\QrCodeScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = props => {\n  _s();\n  const [data, setData] = useState('No result');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      onResult: (result, error) => {\n        if (!!result) {\n          setData(result === null || result === void 0 ? void 0 : result.text);\n        }\n        if (!!error) {\n          console.info(error);\n        }\n      },\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Test, \"U7RheofDkLflS0Xiu368/5GNGN0=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","props","_s","data","setData","children","onResult","result","error","text","console","info","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/InternShip/17-07-2024/main/src/Components/QrCodeScanner.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\n\r\nconst Test = (props) => {\r\n  const [data, setData] = useState('No result');\r\n\r\n  return (\r\n    <>\r\n      <QrReader\r\n        onResult={(result, error) => {\r\n          if (!!result) {\r\n            setData(result?.text);\r\n          }\r\n\r\n          if (!!error) {\r\n            console.info(error);\r\n          }\r\n        }}\r\n        style={{ width: '100%' }}\r\n      />\r\n      <p>{data}</p>\r\n    </>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC;EAE7C,oBACEG,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACF,QAAQ;MACPW,QAAQ,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC3B,IAAI,CAAC,CAACD,MAAM,EAAE;UACZH,OAAO,CAACG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,CAAC;QACvB;QAEA,IAAI,CAAC,CAACD,KAAK,EAAE;UACXE,OAAO,CAACC,IAAI,CAACH,KAAK,CAAC;QACrB;MACF,CAAE;MACFI,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFpB,OAAA;MAAAQ,QAAA,EAAIF;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACb,CAAC;AAEP,CAAC;AAACf,EAAA,CApBIF,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}